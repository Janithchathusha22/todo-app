{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chathusha\\\\Desktop\\\\todo-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\"\n  });\n  const [error, setError] = useState(null); // For error handling\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/tasks\");\n      setTasks(response.data);\n    } catch (err) {\n      setError(\"Error fetching tasks. Please try again later.\");\n      console.error(err);\n    }\n  };\n  const createTask = async () => {\n    if (newTask.title && newTask.description) {\n      try {\n        await axios.post(\"http://localhost:3001/tasks\", newTask);\n        setNewTask({\n          title: \"\",\n          description: \"\"\n        }); // Reset form\n        fetchTasks(); // Fetch updated tasks\n      } catch (err) {\n        setError(\"Error creating task. Please try again later.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Both title and description are required.\");\n    }\n  };\n  const markAsCompleted = async id => {\n    try {\n      await axios.patch(`http://localhost:3001/tasks/${id}`);\n      fetchTasks();\n    } catch (err) {\n      setError(\"Error marking task as completed. Please try again later.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markAsCompleted(task.id),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"oshkiv0Pa+yyzO3B/DeFiNyZVXo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","title","description","error","setError","fetchTasks","response","get","data","err","console","createTask","post","markAsCompleted","id","patch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","onClick","map","task","_c","$RefreshReg$"],"sources":["C:/Users/chathusha/Desktop/todo-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [newTask, setNewTask] = useState({ title: \"\", description: \"\" });\r\n    const [error, setError] = useState(null); // For error handling\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:3001/tasks\");\r\n            setTasks(response.data);\r\n        } catch (err) {\r\n            setError(\"Error fetching tasks. Please try again later.\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const createTask = async () => {\r\n        if (newTask.title && newTask.description) {\r\n            try {\r\n                await axios.post(\"http://localhost:3001/tasks\", newTask);\r\n                setNewTask({ title: \"\", description: \"\" }); // Reset form\r\n                fetchTasks(); // Fetch updated tasks\r\n            } catch (err) {\r\n                setError(\"Error creating task. Please try again later.\");\r\n                console.error(err);\r\n            }\r\n        } else {\r\n            setError(\"Both title and description are required.\");\r\n        }\r\n    };\r\n\r\n    const markAsCompleted = async (id) => {\r\n        try {\r\n            await axios.patch(`http://localhost:3001/tasks/${id}`);\r\n            fetchTasks();\r\n        } catch (err) {\r\n            setError(\"Error marking task as completed. Please try again later.\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Todo App</h1>\r\n\r\n            {/* Display error message if any */}\r\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    value={newTask.title}\r\n                    onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n                />\r\n                <textarea\r\n                    placeholder=\"Description\"\r\n                    value={newTask.description}\r\n                    onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n                ></textarea>\r\n                <button onClick={createTask}>Add Task</button>\r\n            </div>\r\n\r\n            <ul>\r\n                {tasks.map((task) => (\r\n                    <li key={task.id}>\r\n                        <h2>{task.title}</h2>\r\n                        <p>{task.description}</p>\r\n                        <button onClick={() => markAsCompleted(task.id)}>Done</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}